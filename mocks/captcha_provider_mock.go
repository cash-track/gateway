// Code generated by MockGen. DO NOT EDIT.
// Source: captcha/provider.go
//
// Generated by this command:
//
//	mockgen -source=captcha/provider.go -package=mocks -destination=mocks/captcha_provider_mock.go -mock_names=Provider=CaptchaProviderMock
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	fasthttp "github.com/valyala/fasthttp"
	gomock "go.uber.org/mock/gomock"
)

// CaptchaProviderMock is a mock of Provider interface.
type CaptchaProviderMock struct {
	ctrl     *gomock.Controller
	recorder *CaptchaProviderMockMockRecorder
}

// CaptchaProviderMockMockRecorder is the mock recorder for CaptchaProviderMock.
type CaptchaProviderMockMockRecorder struct {
	mock *CaptchaProviderMock
}

// NewCaptchaProviderMock creates a new mock instance.
func NewCaptchaProviderMock(ctrl *gomock.Controller) *CaptchaProviderMock {
	mock := &CaptchaProviderMock{ctrl: ctrl}
	mock.recorder = &CaptchaProviderMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *CaptchaProviderMock) EXPECT() *CaptchaProviderMockMockRecorder {
	return m.recorder
}

// Verify mocks base method.
func (m *CaptchaProviderMock) Verify(ctx *fasthttp.RequestCtx) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", ctx)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Verify indicates an expected call of Verify.
func (mr *CaptchaProviderMockMockRecorder) Verify(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*CaptchaProviderMock)(nil).Verify), ctx)
}
